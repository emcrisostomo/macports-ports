# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           clang_dependency 1.0
PortGroup           muniversal 1.0

name                legacy-support
categories          devel
platforms           darwin

maintainers         {jonesc @cjones051073} {kencu @kencu} openmaintainer
license             MIT

description         Installs wrapper headers to add missing functionality to legacy OSX versions.
long_description    {*}${description}

# Primary release version
set release_ver     0.15

subport ${name} {
    conflicts           ${name}-devel
    github.setup        macports macports-legacy-support ${release_ver} v
    revision            2
    checksums           rmd160  e0a72a2a012f99ec588f4ad08d1952d16c325ee8 \
                        sha256  27836b8e3b200eff6df9b8c2ad1b4731e9a620174f5ac114be23e5884b7b0436 \
                        size    46047
    # remove on next update
    use_parallel_build  no
}

subport ${name}-devel {
    conflicts           ${name}
    github.setup        macports macports-legacy-support 9e9e6bf62bb6e835eff9a9c1aca6ddde1bd09a40
    version             20210501
    revision            3
    livecheck.type      none
    checksums           rmd160  c4655c3f95e721b5d527884d81f60d0ea833d645 \
                        sha256  fbaddaf0a6a6f2099eaea84eafcce0362a856f96516fc4038b16fe1885d46e8a \
                        size    46061
    set release_ver     ${release_ver}.99
}

use_configure       no

set max_darwin_reexport 19

build.env-append    CXX=${configure.cxx} \
                    CC=${configure.cc} \
                    PREFIX=${prefix} \
                    "LIPO=/usr/bin/lipo" \
                    PLATFORM=${os.major} \
                    MAX_DARWIN_REEXPORT=${max_darwin_reexport}

# Need to make a 1.0.0 release before we can set the soversions
# as per release as CMake requires 1.0.0 ...
#build.env-append    SOCURVERSION=${release_ver} \
#                    SOCOMPATVERSION=0.1
build.env-append    SOCURVERSION=1.0.0 \
                    SOCOMPATVERSION=1.0.0

destroot.env        PREFIX=${prefix}

if {![info exists universal_possible]} {
    set universal_possible [expr {${os.universal_supported} && [llength ${configure.universal_archs}] >= 2}]
}
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${universal_archs_supported} {
        lappend merger_build_env(${arch})   "CXXFLAGS=${configure.cxxflags} [muniversal_get_arch_flag ${arch}]" \
                                            "CFLAGS=${configure.cflags} [muniversal_get_arch_flag ${arch}]" \
                                            "LDFLAGS=${configure.ldflags} [muniversal_get_arch_flag ${arch}]" \
                                            "FORCE_ARCH=${arch}"
    }
} else {
    build.env-append                        "CXXFLAGS=${configure.cxxflags} [get_canonical_archflags cxx]" \
                                            "CFLAGS=${configure.cflags} [get_canonical_archflags cc]" \
                                            "LDFLAGS=${configure.ldflags} [get_canonical_archflags ld]" \
                                            "FORCE_ARCH=${build_arch}"
}

test.env            {*}${build.env}
test.run            yes
test.target         test

platform darwin 8 {
    post-destroot {
        # install Tiger-specific fixes
        # very slightly modified which command to match behaviour of 10.5+
        copy ${worksrcpath}/tiger_only/bin/which ${destroot}${prefix}/bin/which
    }
}

# The legacy-support build cannot create the LegacySupportSystem library directly
# on newer systems as the reexport link option to /usr/lib/libSystem.B.dylib
# does not work, due to the file system library cache added in macOS11.
# Fallback to using optool here. Optool also currently not working on arm.
if { ${build_arch} ne "arm64" && ${os.major} > ${max_darwin_reexport} } {
    depends_build-append port:optool
    post-destroot {
        set legSupp   ${prefix}/lib/libMacportsLegacySupport.dylib
        set legSystem ${prefix}/lib/libMacportsLegacySystem.B.dylib
        if {![file exists ${destroot}${legSystem}]} {
            copy ${destroot}${legSupp} ${destroot}${legSystem}
            system "${prefix}/bin/optool install -c reexport -p /usr/lib/libSystem.B.dylib -t ${destroot}${legSystem}"
        } else {
            ui_warn "${destroot}${legSystem} already exists."
        }
    }
}

if {![file exists ${prefix}/libexec/mpstats]} {
    notes "
    To help make sure your system continues to be well represented by MacPorts, especially\
    if your system is not one of the latest macOS releases, please consider installing mpstats.\
    It will periodically send an anonymous synopsis of your OS settings and installed ports.\
    The information provided by this is useful to help determine how resources are allocated.

    You can install mpstats like this:    sudo port install mpstats
    "
}
