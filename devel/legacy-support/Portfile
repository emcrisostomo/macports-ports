# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           clang_dependency 1.0
PortGroup           muniversal 1.0

name                legacy-support
categories          devel
platforms           darwin

maintainers         {jonesc @cjones051073} {kencu @kencu} openmaintainer
license             MIT

description         Installs wrapper headers to add missing functionality to legacy OSX versions.
long_description    {*}${description}

subport ${name} {
    conflicts           ${name}-devel
    github.setup        macports macports-legacy-support 0.15 v
    revision            0
    checksums           rmd160  e0a72a2a012f99ec588f4ad08d1952d16c325ee8 \
                        sha256  27836b8e3b200eff6df9b8c2ad1b4731e9a620174f5ac114be23e5884b7b0436 \
                        size    46047
}

subport ${name}-devel {
    conflicts           ${name}
    github.setup        macports macports-legacy-support b56862b0dd9d0bb2587ddf9e20af2edb8495de26
    version             20210425
    revision            0
    livecheck.type      none
    checksums           rmd160  10f1995b24e699adfca1f3aa4f5e22a5bcbb0e22 \
                        sha256  5f41e6e5b546302aca1cf5337bb8b65507c0091c023da8abdd69b6d3b9938ec2 \
                        size    46047
}

use_configure       no

set max_darwin_reexport 19

build.env           CXX=${configure.cxx} \
                    CC=${configure.cc} \
                    PREFIX=${prefix} \
                    "LIPO=/usr/bin/lipo" \
                    PLATFORM=${os.major} \
                    MAX_DARWIN_REEXPORT=${max_darwin_reexport}

# At some point we should make a 1.0 release and set this properly...
build.env-append    SOCURVERSION=1.0 \
                    SOCOMPATVERSION=1.0

destroot.env        PREFIX=${prefix}

use_parallel_build  no

if {![info exists universal_possible]} {
    set universal_possible [expr {${os.universal_supported} && [llength ${configure.universal_archs}] >= 2}]
}
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${universal_archs_supported} {
        lappend merger_build_env(${arch})   "CXXFLAGS=${configure.cxxflags} [muniversal_get_arch_flag ${arch}]" \
                                            "CFLAGS=${configure.cflags} [muniversal_get_arch_flag ${arch}]" \
                                            "LDFLAGS=${configure.ldflags} [muniversal_get_arch_flag ${arch}]" \
                                            "FORCE_ARCH=${arch}"
    }
} else {
    build.env-append                        "CXXFLAGS=${configure.cxxflags} [get_canonical_archflags cxx]" \
                                            "CFLAGS=${configure.cflags} [get_canonical_archflags cc]" \
                                            "LDFLAGS=${configure.ldflags} [get_canonical_archflags ld]" \
                                            "FORCE_ARCH=${build_arch}"
}

test.env            {*}${build.env}
test.run            yes
test.target         test

platform darwin 8 {
    post-destroot {
        # install Tiger-specific fixes
        # very slightly modified which command to match behaviour of 10.5+
        copy ${worksrcpath}/tiger_only/bin/which ${destroot}${prefix}/bin/which
    }
}

# The legacy-support build cannot create the LegacySupportSystem library directly
# on newer systems as the reexport link option to /usr/lib/libSystem.B.dylib
# does not work, due to the file system library cache added in macOS11.
# Fallback to using optool here. Optool also currently not working on arm.
if { ${build_arch} ne "arm64" && ${os.major} > ${max_darwin_reexport} } {
    depends_build-append port:optool
    post-destroot {
        set legSupp   ${prefix}/lib/libMacportsLegacySupport.dylib
        set legSystem ${prefix}/lib/libMacportsLegacySystem.B.dylib
        if {![file exists ${destroot}${legSystem}]} {
            copy ${destroot}${legSupp} ${destroot}${legSystem}
            system "${prefix}/bin/optool install -c reexport -p /usr/lib/libSystem.B.dylib -t ${destroot}${legSystem}"
        } else {
            ui_warn "${destroot}${legSystem} already exists."
        }
    }
}

if {![file exists ${prefix}/libexec/mpstats]} {
    notes "
    To help make sure your system continues to be well represented by MacPorts, especially\
    if your system is not one of the latest macOS releases, please consider installing mpstats.\
    It will periodically send an anonymous synopsis of your OS settings and installed ports.\
    The information provided by this is useful to help determine how resources are allocated.

    You can install mpstats like this:    sudo port install mpstats
    "
}
